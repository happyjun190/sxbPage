<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/context   
                        http://www.springframework.org/schema/context/spring-context.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	
	<!-- Begin: 设置公用的配置，简化后面的配置 -->
	<!-- MySQL Hikari Datasource -->
	<bean id="baseDataSource" abstract="true" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<!-- <property name="jdbcUrl" value="${jdbc.urlHead}${jdbc.db1}${jdbc.urlParams}" /> --> <!-- 各个数据源自己指定 -->
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 连接只读数据库时配置为true， 保证安全 -->
		<property name="readOnly" value="false" />
		<!-- 等待从连接池中获得连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
		<property name="connectionTimeout" value="30000" />
		<!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
		<property name="idleTimeout" value="600000" />
		<!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒以上，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
		<property name="maxLifetime" value="1765000" />
		<!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
		<property name="maximumPoolSize" value="15" />
	</bean>
	
	
	<!-- myBatis mapper文件位置 -->
	<bean id="baseSqlSessionFactory" abstract="true" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- <property name="dataSource" ref="ds2" /> --> <!-- 各个数据源自己指定dataSource ref-->
		<property name="mapperLocations" value="classpath:com/sxb/mapper/*/*.xml" />
		<!--<property name="plugins">  分页插件 
			<list>
				<ref bean="pageInterceptor" />
			</list>
		</property>
		-->
	</bean>	
	
	
	<bean id="ds1" parent="${jdbc.baseDatasource}">
		<property name="jdbcUrl" value="${jdbc.urlHead}${jdbc.db1}${jdbc.urlParams}" />
	</bean>
	
	<!-- myBatis mapper文件位置 -->
	<bean id="sqlSessionFactory1" parent="baseSqlSessionFactory">
		<property name="dataSource" ref="ds1" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sxb.dao" />
		<property name="annotationClass" value="com.sxb.repositories.UserRepository" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1" />
	</bean>

	<!-- 使用Spring Data的ChainedTransactionManager，缺省的txManager -->
	<bean id="transactionManager" class="org.springframework.data.transaction.ChainedTransactionManager" >
		<constructor-arg>
            <list>
	            <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
					<property name="dataSource" ref="ds1" />
				</bean>
            </list>
		</constructor-arg>
	</bean>
	
	<!-- 扫描@Transactional标注，并指定一个缺省的transaction-manager -->
	<tx:annotation-driven transaction-manager="transactionManager" /> 

</beans>